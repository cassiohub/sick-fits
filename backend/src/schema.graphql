# import * from './generated/prisma.graphql'

input CreateItemInput {
  price: Int!
  title: String!
  image: String
  largeImage: String
  description: String!
}

input UpdateItemInput {
  id: ID!
  price: Int
  title: String
  image: String
  largeImage: String
  description: String
}

input DeleteItemInput {
  id: ID!
}

type ResponseMessage {
  message: String
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
  orders: [OrderItem]
}

type Mutation {
  signup(email: String!, name: String!, password: String!): User!
  signin(email: String!, password: String!): User!
  signout: ResponseMessage
  requestReset(email: String!): ResponseMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
}

type Query {
  me: User
  users: [User]!
}

type Mutation {
  createItem(data: CreateItemInput): Item!
  updateItem(data: UpdateItemInput): Item!
  deleteItem(data: DeleteItemInput): Item
}

type Query {
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection
}

type Mutation {
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
}

type Query {
  order(id: String!): Order
  orders(orderBy: OrderOrderByInput): [Order]!
}

type Mutation {
  createOrder(token: String!): Order!
}